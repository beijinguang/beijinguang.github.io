<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>markee&#39;s blog</title>
  <subtitle>预测未来最好的方法是在现在创造未来</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://code.idea4j.com/"/>
  <updated>2016-09-23T06:42:53.324Z</updated>
  <id>http://code.idea4j.com/</id>
  
  <author>
    <name>markee</name>
    <email>wangjinguang66@163.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>微信小程序</title>
    <link href="http://code.idea4j.com/2016/09/22/essay0923/"/>
    <id>http://code.idea4j.com/2016/09/22/essay0923/</id>
    <published>2016-09-22T15:10:26.000Z</published>
    <updated>2016-09-23T06:42:53.324Z</updated>
    
    <content type="html"><![CDATA[<p>微信小程序开发参考资源</p>
<p><a href="https://github.com/Aufree/awesome-wechat-weapp" target="_blank" rel="external">https://github.com/Aufree/awesome-wechat-weapp</a><br><a href="https://github.com/justjavac/awesome-wechat-weapp" target="_blank" rel="external">https://github.com/justjavac/awesome-wechat-weapp</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;微信小程序开发参考资源&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/Aufree/awesome-wechat-weapp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/Aufree/awes
    
    </summary>
    
      <category term="微信" scheme="http://code.idea4j.com/categories/%E5%BE%AE%E4%BF%A1/"/>
    
    
      <category term="微信小程序" scheme="http://code.idea4j.com/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>个人小记</title>
    <link href="http://code.idea4j.com/2016/09/22/essay0922/"/>
    <id>http://code.idea4j.com/2016/09/22/essay0922/</id>
    <published>2016-09-22T02:23:15.000Z</published>
    <updated>2016-09-22T05:41:12.725Z</updated>
    
    <content type="html"><![CDATA[<pre><code>    耳机中播放着有网易云音乐搜到Alizee的歌，歌词是法文的，尽管听不懂，但是Alizee的声音和音乐的节奏
总是能让我心情舒缓。
</code></pre><a id="more"></a>
<pre><code>     很长的时间没有这样把自己的所思所想化为文字了，记不清上次这样是什么时候了，也许是某天突如其来的
兴致写过吧。现在已经记不清内容，不过可以确定的是那些文字是用笔倾吐的。今天并不是我第一次用键盘表达
然而确是第一次强烈地想通过键盘回想记录和表达心情。
</code></pre><h3 id="毕业后"><a href="#毕业后" class="headerlink" title="毕业后"></a>毕业后</h3><pre><code>    某一天，经过了四年“中国式”大学生活的我毕业了（想找四个字来形容下我的大学生活，一时竟想不出），
毕业的我是兴奋的，被校园禁锢了近20年，终于不用再天天啃书本了，虽然大学并没有真正的啃过一本书。在学
校签了三方协议去一家汽车公司工作，也算是专业对口，然而我还是太年轻，车间的工作真的是适应不了。
    终于迎来了人生比较充实的生活，不顾家人的反对，一个人背着行李来北京培训了java编程，本来是想学习
 Android的，却阴差阳错的学习了javaEE，无论如何，生活充实了。周一到周六早起晚睡的学习语法，练习代码，
 周日星期天也不曾放松，由于大学有C语言的基础，学起来也不是很吃力，也第一次感到大学学到的知识的实用
 保持着在培训机构每天第一批人去上学，最后一批走的习惯，总算修炼小成。
</code></pre><h3 id="电子商务很火"><a href="#电子商务很火" class="headerlink" title="电子商务很火"></a>电子商务很火</h3><pre><code>   记得那年电子商务很火，我的第一份工作就是开发电子商务系统，因为公司是重头开始做电子商务系统，而我
是被招进公司技术部门的第3个员工，所以结果就是加班，不停地加班，996++这个状态一直持续到我从这家公司
离职。现在想起来，中间偶尔有个双休，简直不要太爽，周六休息完，一想周日还能休息，那感觉！然而，也正
是这段时间，我的技术得到了很大的提升。
</code></pre><h3 id="我要搞IOS"><a href="#我要搞IOS" class="headerlink" title="我要搞IOS"></a>我要搞IOS</h3><pre><code>   几个月的IOS开发生活后，又回到了JavaEE开发上，转了个圈。事实说明，学习的环境很重要... ,然后这个时
期，我试着用了阿里云，搭建了svn、jira，搞了代码自动生成工具...
</code></pre><h3 id="猴子出世"><a href="#猴子出世" class="headerlink" title="猴子出世"></a>猴子出世</h3><pre><code>用户1000W了，网站相对稳定
</code></pre><h3 id="到此还没完"><a href="#到此还没完" class="headerlink" title="到此还没完"></a>到此还没完</h3>]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;    耳机中播放着有网易云音乐搜到Alizee的歌，歌词是法文的，尽管听不懂，但是Alizee的声音和音乐的节奏
总是能让我心情舒缓。
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://code.idea4j.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="http://code.idea4j.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>随笔</title>
    <link href="http://code.idea4j.com/2016/09/21/essay/"/>
    <id>http://code.idea4j.com/2016/09/21/essay/</id>
    <published>2016-09-21T15:22:32.000Z</published>
    <updated>2016-09-22T05:41:12.662Z</updated>
    
    <content type="html"><![CDATA[<p>恍惚之间<br>三十了<br>我还没有二够啊<br>回蓦过去就在眼前<br>窥望将来总也看不到边<br>似乎又能清清楚楚地看到<br>也许就是今天的循环复制</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;恍惚之间&lt;br&gt;三十了&lt;br&gt;我还没有二够啊&lt;br&gt;回蓦过去就在眼前&lt;br&gt;窥望将来总也看不到边&lt;br&gt;似乎又能清清楚楚地看到&lt;br&gt;也许就是今天的循环复制&lt;/p&gt;

    
    </summary>
    
      <category term="随笔" scheme="http://code.idea4j.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="http://code.idea4j.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>设计模式(一)</title>
    <link href="http://code.idea4j.com/2016/08/09/DesignPatterns/"/>
    <id>http://code.idea4j.com/2016/08/09/DesignPatterns/</id>
    <published>2016-08-09T13:11:41.000Z</published>
    <updated>2016-09-26T02:40:51.857Z</updated>
    
    <content type="html"><![CDATA[<p>设计模式（Design pattern）是一套被反复使用、多数人知晓的、经过分类编目的、代码设计经验的总结<br><a id="more"></a></p>
<h1 id="设计模式"><a href="#设计模式" class="headerlink" title="设计模式"></a>设计模式</h1><h2 id="设计模式的分类"><a href="#设计模式的分类" class="headerlink" title="设计模式的分类"></a>设计模式的分类</h2><p>总体来说设计模式分为三大类：<br>创建型模式，共五种：工厂方法模式、抽象工厂模式、单例模式、建造者模式、原型模式。<br>结构型模式，共七种：适配器模式、装饰器模式、代理模式、外观模式、桥接模式、组合模式、享元模式。<br>行为型模式，共十一种：策略模式、模板方法模式、观察者模式、迭代子模式、责任链模式、命令模式、备忘录模式、状态模式、访问者模式、中介者模式、解释器模式。</p>
<h2 id="设计模式的六大原则"><a href="#设计模式的六大原则" class="headerlink" title="设计模式的六大原则"></a>设计模式的六大原则</h2><p><strong>1、开闭原则（Open Close Principle）</strong><br>    开闭原则就是说对扩展开放，对修改关闭。在程序需要进行拓展的时候，不能去修改原有的代码，实现一个热插拔的效果。所以一句话概括就是：为了使程序的扩展性好，易于维护和升级。想要达到这样的效果，我们需要使用接口和抽象类，后面的具体设计中我们会提到这点。<br><strong>2、里氏代换原则（Liskov Substitution Principle）</strong><br>    里氏代换原则(Liskov Substitution Principle LSP)面向对象设计的基本原则之一。 里氏代换原则中说，任何基类可以出现的地方，子类一定可以出现。 LSP是继承复用的基石，只有当衍生类可以替换掉基类，软件单位的功能不受到影响时，基类才能真正被复用，而衍生类也能够在基类的基础上增加新的行为。里氏代换原则是对“开-闭”原则的补充。实现“开-闭”原则的关键步骤就是抽象化。而基类与子类的继承关系就是抽象化的具体实现，所以里氏代换原则是对实现抽象化的具体步骤的规范。—— From Baidu 百科<br><strong>3、依赖倒转原则（Dependence Inversion Principle）</strong><br>    这个是开闭原则的基础，具体内容：真对接口编程，依赖于抽象而不依赖于具体。<br><strong>4、接口隔离原则（Interface Segregation Principle）</strong><br>    这个原则的意思是：使用多个隔离的接口，比使用单个接口要好。还是一个降低类之间的耦合度的意思，从这儿我们看出，其实设计模式就是一个软件的设计思想，从大型软件架构出发，为了升级和维护方便。所以上文中多次出现：降低依赖，降低耦合。<br><strong>5、迪米特法则（最少知道原则）（Demeter Principle）</strong><br>    为什么叫最少知道原则，就是说：一个实体应当尽量少的与其他实体之间发生相互作用，使得系统功能模块相对独立。<br><strong>6、合成复用原则（Composite Reuse Principle）</strong><br>    原则是尽量使用合成/聚合的方式，而不是使用继承。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;设计模式（Design pattern）是一套被反复使用、多数人知晓的、经过分类编目的、代码设计经验的总结&lt;br&gt;
    
    </summary>
    
      <category term="设计模式" scheme="http://code.idea4j.com/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="设计模式" scheme="http://code.idea4j.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
      <category term="java" scheme="http://code.idea4j.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>MySQL 存储过程的使用</title>
    <link href="http://code.idea4j.com/2016/08/08/MySQLSP/"/>
    <id>http://code.idea4j.com/2016/08/08/MySQLSP/</id>
    <published>2016-08-08T09:27:18.000Z</published>
    <updated>2016-09-26T02:40:51.951Z</updated>
    
    <content type="html"><![CDATA[<p>存储过程的使用<br><a id="more"></a></p>
<h2 id="MySQL存储过程的创建"><a href="#MySQL存储过程的创建" class="headerlink" title="MySQL存储过程的创建"></a>MySQL存储过程的创建</h2><h3 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h3><p>  <strong><em>CREATE PROCEDURE 过程名 ([过程参数[,…]])[特性 …] 过程体</em></strong></p>
<h3 id="声明分隔符"><a href="#声明分隔符" class="headerlink" title="声明分隔符"></a>声明分隔符</h3><p>DELIMITER //和DELIMITER ;<br>    因为MySQL默认以”;”为分隔符，如果我们没有声明分割符，那么编译器会把存储过程当成SQL语句进行处理，<br>则存储过程的编译过程会报错，所以要事先用DELIMITER关键字申明当前段分隔符，这样MySQL才会将”;”当做存储<br>过程中的代码，不会执行这些代码，用完了之后要把分隔符还原。</p>
<h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><p>MySQL存储过程的参数用在存储过程的定义，共有三种参数类型,IN,OUT,INOUT,形式如：<br><strong><em>CREATE PROCEDURE([[IN |OUT |INOUT ] 参数名 数据类形…])</em></strong><br>IN 输入参数:表示该参数的值必须在调用存储过程时指定，在存储过程中修改该参数的值不能被返回，为默认值<br>OUT 输出参数:该值可在存储过程内部被改变，并可返回<br>INOUT 输入输出参数:调用时指定，并且可被改变和返回</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">DELIMITER //</div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> demo_in_parameter(<span class="keyword">IN</span> p_in <span class="built_in">INT</span>)</div><div class="line"><span class="keyword">BEGIN</span></div><div class="line"><span class="keyword">UPDATE</span> sys_user <span class="keyword">SET</span> login_name=<span class="string">'test'</span> <span class="keyword">WHERE</span> <span class="keyword">id</span> = p_in ;</div><div class="line"><span class="keyword">END</span> ;</div><div class="line">//</div><div class="line">DELIMITER ;</div><div class="line"></div><div class="line"><span class="keyword">CALL</span> demo_in_parameter(<span class="number">1</span>)</div></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">DELIMITER //</div><div class="line"> <span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> demo_out_parameter(<span class="keyword">OUT</span> s <span class="built_in">INT</span>)  </div><div class="line"> <span class="keyword">BEGIN</span> </div><div class="line"> <span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(*) <span class="keyword">INTO</span> s <span class="keyword">FROM</span> sys_user;  </div><div class="line"> <span class="keyword">END</span> </div><div class="line"> //</div><div class="line"> DELIMITER ;</div><div class="line"> </div><div class="line"> <span class="keyword">SET</span> @p_out=<span class="number">1</span>;</div><div class="line"> <span class="keyword">CALL</span> demo_out_parameter(@p_out);</div><div class="line"> <span class="keyword">SELECT</span> @p_out;</div></pre></td></tr></table></figure>
 <figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">DELIMITER //</div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> demo_inout_paramter(INOUT p_inout <span class="built_in">INT</span>)</div><div class="line"><span class="keyword">BEGIN</span></div><div class="line"><span class="keyword">SELECT</span> p_inout;</div><div class="line"><span class="keyword">SET</span> p_inout=<span class="number">2</span>;</div><div class="line"><span class="keyword">SELECT</span> p_inout;</div><div class="line"><span class="keyword">END</span></div><div class="line">//</div><div class="line">DELIMITER ;</div><div class="line"></div><div class="line"><span class="keyword">SET</span> @p_inout=<span class="number">1</span>;</div><div class="line"><span class="keyword">CALL</span> demo_inout_paramter(@p_inout);</div><div class="line"><span class="keyword">SELECT</span> @p_inout</div></pre></td></tr></table></figure>
<h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><p>Ⅰ. 变量定义<br><strong><em>DECLARE variable_name [,variable_name…] datatype [DEFAULT value];</em></strong><br>其中，datatype为MySQL的数据类型，如:int, float, date, varchar(length)<br>例如:<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">DECLARE</span> l_int <span class="built_in">int</span> <span class="keyword">unsigned</span> <span class="keyword">default</span> <span class="number">4000000</span>;  </div><div class="line"><span class="keyword">DECLARE</span> l_numeric <span class="built_in">number</span>(<span class="number">8</span>,<span class="number">2</span>) <span class="keyword">DEFAULT</span> <span class="number">9.95</span>;  </div><div class="line"><span class="keyword">DECLARE</span> l_date <span class="built_in">date</span> <span class="keyword">DEFAULT</span> <span class="string">'1999-12-31'</span>;  </div><div class="line"><span class="keyword">DECLARE</span> l_datetime datetime <span class="keyword">DEFAULT</span> <span class="string">'1999-12-31 23:59:59'</span>;  </div><div class="line"><span class="keyword">DECLARE</span> l_varchar <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="string">'This will not be padded'</span>;</div></pre></td></tr></table></figure></p>
<p>Ⅱ. 变量赋值<br><strong><em>SET 变量名 = 表达式值 [,variable_name = expression …]</em></strong></p>
<p>Ⅲ. 用户变量<br>①在MySQL客户端使用用户变量<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(*) <span class="keyword">INTO</span> @countuser <span class="keyword">FROM</span> sys_user; <span class="comment">-- 将count(*) 的值赋给 @countuser</span></div><div class="line"><span class="keyword">SELECT</span> @countuser;</div><div class="line"></div><div class="line"><span class="keyword">set</span> @greeting = <span class="string">"hello"</span>;</div><div class="line"><span class="keyword">select</span> @greeting; <span class="comment">-- hello</span></div><div class="line"></div><div class="line"><span class="keyword">SET</span> @<span class="keyword">result</span> = <span class="number">25</span>*<span class="number">4</span>;</div><div class="line"><span class="keyword">select</span> @<span class="keyword">result</span>; <span class="comment">-- 100</span></div></pre></td></tr></table></figure></p>
<p>②在存储过程中使用用户变量<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> GreetWorld() <span class="keyword">SELECT</span> <span class="keyword">CONCAT</span>(@greeting,<span class="string">' World'</span>);  </div><div class="line"><span class="keyword">SET</span> @greeting=<span class="string">'Hello'</span>;  </div><div class="line"><span class="keyword">CALL</span> GreetWorld(); <span class="comment">--Hello World</span></div></pre></td></tr></table></figure></p>
<p>③在存储过程间传递全局范围的用户变量<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> p1()   <span class="keyword">SET</span> @last_procedure=<span class="string">'p1'</span>;  </div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> p2() <span class="keyword">SELECT</span> <span class="keyword">CONCAT</span>(<span class="string">'Last procedure was '</span>,@last_procedure);  </div><div class="line"><span class="keyword">CALL</span> p1( );  </div><div class="line"><span class="keyword">CALL</span> p2( ); <span class="comment">-- Last procedure was p1</span></div></pre></td></tr></table></figure></p>
<p>注意:<br>用户变量名一般以@开头,滥用用户变量会导致程序难以理解及管理</p>
<h2 id="MySQL存储过程的查询、删除"><a href="#MySQL存储过程的查询、删除" class="headerlink" title="MySQL存储过程的查询、删除"></a>MySQL存储过程的查询、删除</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> <span class="keyword">name</span> <span class="keyword">from</span> mysql.proc <span class="keyword">where</span> db=<span class="string">'数据库名'</span>;</div><div class="line"><span class="keyword">select</span> routine_name <span class="keyword">from</span> information_schema.routines <span class="keyword">where</span> routine_schema=<span class="string">'数据库名'</span>;</div><div class="line"><span class="keyword">show</span> <span class="keyword">procedure</span> <span class="keyword">status</span> <span class="keyword">where</span> db=<span class="string">'数据库名'</span>;</div><div class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> 数据库.存储过程名;</div><div class="line"></div><div class="line"><span class="comment">-- 删除</span></div><div class="line"><span class="keyword">DROP</span> <span class="keyword">PROCEDURE</span>  <span class="string">'存储过程名'</span></div></pre></td></tr></table></figure>
<h2 id="MySQL存储过程的控制语句"><a href="#MySQL存储过程的控制语句" class="headerlink" title="MySQL存储过程的控制语句"></a>MySQL存储过程的控制语句</h2><h3 id="变量作用域"><a href="#变量作用域" class="headerlink" title="变量作用域"></a>变量作用域</h3><p>内部的变量在其作用域范围内享有更高的优先权，当执行到end。变量时，内部变量消失，此时已经在其作用域外，变量不再可见了，<br>应为在存储过程外再也不能找到这个申明的变量，但是你可以通过out参数或者将其值指派给会话变量来保存其值。<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">DELIMITER //</div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> pro_variable_field()</div><div class="line"><span class="keyword">BEGIN</span></div><div class="line"><span class="keyword">DECLARE</span> var1 <span class="built_in">VARCHAR</span>(<span class="number">5</span>) <span class="keyword">DEFAULT</span> <span class="string">'outer'</span>;</div><div class="line"><span class="keyword">BEGIN</span></div><div class="line"><span class="keyword">DECLARE</span> var1 <span class="built_in">VARCHAR</span>(<span class="number">5</span>) <span class="keyword">DEFAULT</span> <span class="string">'inner'</span>;</div><div class="line"><span class="keyword">SELECT</span> var1;</div><div class="line"><span class="keyword">END</span>;</div><div class="line"><span class="keyword">SELECT</span> var1;</div><div class="line"><span class="keyword">END</span>;</div><div class="line">//</div><div class="line">DELIMITER ;</div></pre></td></tr></table></figure></p>
<h3 id="条件语句"><a href="#条件语句" class="headerlink" title="条件语句"></a>条件语句</h3><p>Ⅰ. if-then -else语句<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">DELIMITER //</div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> ifthenelse(<span class="keyword">IN</span> parameter <span class="built_in">INT</span>)</div><div class="line"><span class="keyword">BEGIN</span></div><div class="line"><span class="keyword">DECLARE</span> <span class="keyword">var</span> <span class="built_in">INT</span> ;</div><div class="line"><span class="keyword">SET</span> <span class="keyword">var</span> = parameter + <span class="number">1</span>;</div><div class="line">IF var=0 THEN</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> sys_log <span class="keyword">VALUE</span>(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="literal">NULL</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>);</div><div class="line"><span class="keyword">END</span> <span class="keyword">IF</span>;</div><div class="line">IF parameter=0 THEN</div><div class="line"><span class="keyword">UPDATE</span> sys_log <span class="keyword">SET</span> <span class="keyword">id</span>=<span class="keyword">id</span>+<span class="number">1</span>;</div><div class="line">ELSE</div><div class="line"><span class="keyword">UPDATE</span> sys_log <span class="keyword">SET</span> <span class="keyword">id</span>=<span class="keyword">id</span>+<span class="number">1</span>;</div><div class="line"><span class="keyword">END</span> <span class="keyword">IF</span>;</div><div class="line"><span class="keyword">END</span>;</div><div class="line">//</div><div class="line">DELIMITER ;</div></pre></td></tr></table></figure></p>
<p>Ⅱ. case语句：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">DELIMITER $$</div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> casewhenthen(<span class="keyword">IN</span> caseparameter <span class="built_in">INT</span>)</div><div class="line"><span class="keyword">BEGIN</span></div><div class="line"><span class="keyword">DECLARE</span> <span class="keyword">var</span> <span class="built_in">INT</span> ;</div><div class="line"><span class="keyword">SET</span> <span class="keyword">var</span> = caseparameter+<span class="number">1</span>;</div><div class="line">CASE var</div><div class="line">WHEN 0 THEN</div><div class="line"><span class="keyword">SELECT</span> <span class="keyword">var</span>+<span class="number">1</span>;</div><div class="line">WHEN 1 THEN </div><div class="line"><span class="keyword">SELECT</span> <span class="keyword">var</span>+<span class="number">2</span>;</div><div class="line">ELSE</div><div class="line"><span class="keyword">SELECT</span> <span class="keyword">var</span>+<span class="number">8</span>;</div><div class="line"><span class="keyword">END</span> <span class="keyword">CASE</span>;</div><div class="line"><span class="keyword">END</span>;</div><div class="line">$$</div><div class="line">DELIMITER ;</div><div class="line"></div><div class="line"><span class="keyword">CALL</span> casewhenthen(<span class="number">0</span>);</div></pre></td></tr></table></figure></p>
<h3 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h3><p>Ⅰ. while ···· end while：<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">DELIMITER !!</div><div class="line">CREATE PROCEDURE whileloop()</div><div class="line">BEGIN</div><div class="line">DECLARE var INT;</div><div class="line">SET var = 0;</div><div class="line">WHILE var&lt;6 DO </div><div class="line">SELECT var;</div><div class="line">SET var = var+1;</div><div class="line">END WHILE;</div><div class="line">END;</div><div class="line">!!</div><div class="line">DELIMITER ;</div><div class="line"></div><div class="line">CALL whileloop();</div></pre></td></tr></table></figure></p>
<p>Ⅱ. repeat···· end repeat：<br>它在执行操作后检查结果，而while则是执行前进行检查。<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">DELIMITER **</div><div class="line">CREATE PROCEDURE repeatuntil()</div><div class="line">BEGIN</div><div class="line">DECLARE var INT;</div><div class="line">SET var = 0;</div><div class="line">REPEAT </div><div class="line">SELECT var;</div><div class="line">SET var = var+1;</div><div class="line">UNTIL var&gt;=5</div><div class="line">END REPEAT;</div><div class="line">END;</div><div class="line">**</div><div class="line">DELIMITER ;</div><div class="line"></div><div class="line">CALL repeatuntil();</div></pre></td></tr></table></figure></p>
<p>Ⅲ. loop ·····end loop:<br>loop循环不需要初始条件，这点和while 循环相似，同时和repeat循环一样不需要结束条件, leave语句的意义是离开循环。<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">DELIMITER **</div><div class="line">CREATE PROCEDURE loopdemo()</div><div class="line">BEGIN</div><div class="line">DECLARE var INT;</div><div class="line">SET var = 4;</div><div class="line">LOOP_LABLE:LOOP</div><div class="line">SELECT var;</div><div class="line">SET var = var+1;</div><div class="line">IF var&gt;=8 THEN</div><div class="line">LEAVE LOOP_LABLE;</div><div class="line">END IF;</div><div class="line">END LOOP;</div><div class="line">END;</div><div class="line">**</div><div class="line">DELIMITER ;</div><div class="line"></div><div class="line">CALL loopdemo();</div></pre></td></tr></table></figure></p>
<h3 id="ITERATE迭代"><a href="#ITERATE迭代" class="headerlink" title="ITERATE迭代"></a>ITERATE迭代</h3><p>Ⅰ. ITERATE:<br>通过引用复合语句的标号,来从新开始复合语句</p>
<h2 id="MySQL存储过程的基本函数"><a href="#MySQL存储过程的基本函数" class="headerlink" title="MySQL存储过程的基本函数"></a>MySQL存储过程的基本函数</h2><h3 id="字符串类"><a href="#字符串类" class="headerlink" title="字符串类"></a>字符串类</h3><p>CHARSET(str) //返回字串字符集<br>CONCAT (string2 [,… ]) //连接字串<br>INSTR (string ,substring ) //返回substring首次在string中出现的位置,不存在返回0<br>LCASE (string2 ) //转换成小写<br>LEFT (string2 ,length ) //从string2中的左边起取length个字符<br>LENGTH (string ) //string长度<br>LOAD_FILE (file_name ) //从文件读取内容<br>LOCATE (substring , string [,start_position ] ) 同INSTR,但可指定开始位置<br>LPAD (string2 ,length ,pad ) //重复用pad加在string开头,直到字串长度为length<br>LTRIM (string2 ) //去除前端空格<br>REPEAT (string2 ,count ) //重复count次<br>REPLACE (str ,search_str ,replace_str ) //在str中用replace_str替换search_str<br>RPAD (string2 ,length ,pad) //在str后用pad补充,直到长度为length<br>RTRIM (string2 ) //去除后端空格<br>STRCMP (string1 ,string2 ) //逐字符比较两字串大小,<br>SUBSTRING (str , position [,length ]) //从str的position开始,取length个字符,<br>注：mysql中处理字符串时，默认第一个字符下标为1，即参数position必须大于等于1 </p>
<p>TRIM([[BOTH|LEADING|TRAILING] [padding] FROM]string2) //去除指定位置的指定字符<br>UCASE (string2 ) //转换成大写<br>RIGHT(string2,length) //取string2最后length个字符<br>SPACE(count) //生成count个空格</p>
<h3 id="数学类"><a href="#数学类" class="headerlink" title="数学类"></a>数学类</h3><p>ABS (number2 ) //绝对值<br>BIN (decimal_number ) //十进制转二进制<br>CEILING (number2 ) //向上取整<br>CONV(number2,from_base,to_base) //进制转换<br>FLOOR (number2 ) //向下取整<br>FORMAT (number,decimal_places ) //保留小数位数<br>HEX (DecimalNumber ) //转十六进制<br>注：HEX()中可传入字符串，则返回其ASC-11码，如HEX(‘DEF’)返回4142143<br>也可以传入十进制整数，返回其十六进制编码，如HEX(25)返回19<br>LEAST (number , number2 [,..]) //求最小值<br>MOD (numerator ,denominator ) //求余<br>POWER (number ,power ) //求指数<br>RAND([seed]) //随机数<br>ROUND (number [,decimals ]) //四舍五入,decimals为小数位数]<br>注：返回类型并非均为整数，如：<br>(1)默认变为整形值<br>(2)可以设定小数位数，返回浮点型数据</p>
<h3 id="日期时间类"><a href="#日期时间类" class="headerlink" title="日期时间类"></a>日期时间类</h3><p>ADDTIME (date2 ,time_interval ) //将time_interval加到date2<br>CONVERT_TZ (datetime2 ,fromTZ ,toTZ ) //转换时区<br>CURRENT_DATE ( ) //当前日期<br>CURRENT_TIME ( ) //当前时间<br>CURRENT_TIMESTAMP ( ) //当前时间戳<br>DATE (datetime ) //返回datetime的日期部分<br>DATE_ADD (date2 , INTERVAL d_value d_type ) //在date2中加上日期或时间<br>DATE_FORMAT (datetime ,FormatCodes ) //使用formatcodes格式显示datetime<br>DATE_SUB (date2 , INTERVAL d_value d_type ) //在date2上减去一个时间<br>DATEDIFF (date1 ,date2 ) //两个日期差<br>DAY (date ) //返回日期的天<br>DAYNAME (date ) //英文星期<br>DAYOFWEEK (date ) //星期(1-7) ,1为星期天<br>DAYOFYEAR (date ) //一年中的第几天<br>EXTRACT (interval_name FROM date ) //从date中提取日期的指定部分<br>MAKEDATE (year ,day ) //给出年及年中的第几天,生成日期串<br>MAKETIME (hour ,minute ,second ) //生成时间串<br>MONTHNAME (date ) //英文月份名<br>NOW ( ) //当前时间<br>SEC_TO_TIME (seconds ) //秒数转成时间<br>STR_TO_DATE (string ,format ) //字串转成时间,以format格式显示<br>TIMEDIFF (datetime1 ,datetime2 ) //两个时间差<br>TIME_TO_SEC (time ) //时间转秒数]<br>WEEK (date_time [,start_of_week ]) //第几周<br>YEAR (datetime ) //年份<br>DAYOFMONTH(datetime) //月的第几天<br>HOUR(datetime) //小时<br>LAST_DAY(date) //date的月的最后日期<br>MICROSECOND(datetime) //微秒<br>MONTH(datetime) //月<br>MINUTE(datetime) //分返回符号,正负或0<br>SQRT(number2) //开平方</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;存储过程的使用&lt;br&gt;
    
    </summary>
    
      <category term="database" scheme="http://code.idea4j.com/categories/database/"/>
    
    
      <category term="Stored Procedure" scheme="http://code.idea4j.com/tags/Stored-Procedure/"/>
    
      <category term="mysql" scheme="http://code.idea4j.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>存储过程的优缺点</title>
    <link href="http://code.idea4j.com/2016/08/08/storedprodcedure/"/>
    <id>http://code.idea4j.com/2016/08/08/storedprodcedure/</id>
    <published>2016-08-08T08:24:05.000Z</published>
    <updated>2016-09-23T05:08:52.510Z</updated>
    
    <content type="html"><![CDATA[<p>why use Stored Procedure?<br><a id="more"></a></p>
<h2 id="存储过程"><a href="#存储过程" class="headerlink" title="存储过程"></a>存储过程</h2><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><pre><code>    存储过程（Stored Procedure）是在大型数据库系统中，一组为了完成特定功能的SQL 语句集，存储在数据库中，经过
第一次编译后再次调用不需要再次编译，用户通过指定存储过程的名字并给出参数（如果该存储过程带有参数）来执行它。
存储过程是数据库中的一个重要对象，任何一个设计良好的数据库应用程序都应该用到存储过程
</code></pre><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><h4 id="存储过程的能力大大增强了SQL语言的功能和灵活性"><a href="#存储过程的能力大大增强了SQL语言的功能和灵活性" class="headerlink" title="存储过程的能力大大增强了SQL语言的功能和灵活性"></a><strong>存储过程的能力大大增强了SQL语言的功能和灵活性</strong></h4><pre><code>存储过程可以用流控制语句编写，有很强的灵活性，可以完成复杂的判断和较复杂的运算。
</code></pre><h4 id="执行速度快"><a href="#执行速度快" class="headerlink" title="执行速度快"></a><strong>执行速度快</strong></h4><pre><code>    存储过程只在创造时进行编译，以后每次执行存储过程都不需再重新编译，而一般SQL语句每执行一次就编译一次,
所以使用存储过程可提高数据库执行速度。
</code></pre><h4 id="减少网络通信量"><a href="#减少网络通信量" class="headerlink" title="减少网络通信量"></a><strong>减少网络通信量</strong></h4><pre><code>    当对数据库进行复杂操作时，（如对多个表进行insert、update、select、delete时）可将这些复杂操作用存储过程
封装起来与数据库提供的事务处理结合一起使用。这些操作，如果用程序完成就是多条SQL语句，可能要多次连接数据库，
而换成存储过程只需一次连接。
</code></pre><h4 id="更强的适应性与复用性"><a href="#更强的适应性与复用性" class="headerlink" title="更强的适应性与复用性"></a><strong>更强的适应性与复用性</strong></h4><pre><code>存储过程可以重复使用，减少数据库开发人员的工作量。
</code></pre><h4 id="可维护性高"><a href="#可维护性高" class="headerlink" title="可维护性高"></a><strong>可维护性高</strong></h4><pre><code>更新存储过程通常比更改、测试以及重新部署程序集需要较少的时间和精力。
</code></pre><h4 id="安全性高"><a href="#安全性高" class="headerlink" title="安全性高"></a><strong>安全性高</strong></h4><pre><code>    可设定只有某用户才能对指定存储过程的使用权，且存储过程比多条sql稳定，只要数据库不出现问题，基本上是不会
出现什么问题的。
</code></pre><h4 id="分布式工作"><a href="#分布式工作" class="headerlink" title="分布式工作"></a><strong>分布式工作</strong></h4><pre><code>应用程序和数据库的编码工作可以单独进行，减少耦合度。
</code></pre><h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><h4 id="开发调试差"><a href="#开发调试差" class="headerlink" title="开发调试差"></a><strong>开发调试差</strong></h4><pre><code>无良好的IDE开发工具，存储过程的调试比一般SQL要复杂的多。（MySQL调试工具Debugger for MySQL）
</code></pre><h4 id="可移植性差"><a href="#可移植性差" class="headerlink" title="可移植性差"></a><strong>可移植性差</strong></h4><pre><code>由于存储过程将应用程序绑定到数据库上，因此使用存储过程封装业务逻辑将限制应用程序的可移植性。
</code></pre><h4 id="重新编译问题"><a href="#重新编译问题" class="headerlink" title="重新编译问题"></a><strong>重新编译问题</strong></h4><pre><code>    因为后端代码是运行前编译的，如果带有引用关系的对象发生改变时，受影响的存储过程、包将需要重新
编译（不过也可以设置成运行时刻自动编译）。
</code></pre><h4 id="维护难"><a href="#维护难" class="headerlink" title="维护难"></a><strong>维护难</strong></h4><pre><code>    如果在一个程序系统中大量的使用存储过程，到程序交付使用的时候随着用户需求的增加会导致数据结构的变化，
接着就是系统的相关问题了，最后如果用户想维护该系统可以说是很难很难、而且代价是空前的，维护起来更麻烦。
</code></pre><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><pre><code>http://blog.csdn.net/jesse621/article/details/9452049
http://blog.csdn.net/u010796790/article/details/52194842
http://baike.baidu.com/link?url=31ou9zns4zUnhs0gXjdjlWT8j-QvJ6QJqz5FYj6p_DM2TXYoLIYJgBsELDuXTcelRtm9Pk51O7FZcOVowd_YBq
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;why use Stored Procedure?&lt;br&gt;
    
    </summary>
    
      <category term="database" scheme="http://code.idea4j.com/categories/database/"/>
    
    
      <category term="Stored Procedure" scheme="http://code.idea4j.com/tags/Stored-Procedure/"/>
    
  </entry>
  
  <entry>
    <title>恭喜张梦雪夺得里约奥运首金</title>
    <link href="http://code.idea4j.com/2016/08/07/liyue87/"/>
    <id>http://code.idea4j.com/2016/08/07/liyue87/</id>
    <published>2016-08-07T14:51:45.000Z</published>
    <updated>2016-09-22T05:47:54.752Z</updated>
    
    <content type="html"><![CDATA[<p>中国队终于取得了里约奥运的首金<br><a id="more"></a></p>
<p>#张梦雪夺得里约奥运首金</p>
<p><img src="http://obc3a6u0s.bkt.clouddn.com/QQ20160807-0@2x.png" alt="张梦雪首金"></p>
<p>没能看到孙杨夺冠,总算在睡觉前有金牌了。</p>
<p>预赛中， 俄罗斯选手巴特萨拉斯基纳以390环获第一，俄罗斯选手科尔舒诺娃以387环列第二，中国选手张梦雪以384环列第七。中国选手郭文珺发挥失常，打出378环未进决赛。</p>
<p>决赛三枪过后，西班牙选手弗兰克特以30.2环排名第一，埃尔霍霍德以30环排名第二，中国选手张梦雪以28.2环排名第七。第二组三枪过后，西班牙选手弗兰克特以59.8环排名第一，希腊选手克拉卡奇以59.7环排名第二， 中国选手张梦雪以58.5环排名第五。</p>
<p>淘汰赛首轮，希腊选手克拉卡奇以79.0环排名第一，中国选手张梦雪以79.0环并列第一。俄罗斯选手科尔舒诺娃第一个被淘汰，获得该项目第八名。</p>
<p>第二轮，墨西哥选手扎瓦拉以99.1环排名第一，中国选手张梦雪以98.9环排名第二，俄罗斯选手巴特萨拉斯基纳以98.2环排名第三。塞尔维亚的维利克维奇被淘汰，获得第七名。</p>
<p>第三轮，中国选手张梦雪以119.8环排名第一，墨西哥选手扎瓦拉以118.6环排名第二，俄罗斯选手巴特萨拉斯基纳以118.1环排名第三。西班牙选手弗兰克特第三位被淘汰，获得第六名。</p>
<p>第四轮，中国选手张梦雪以138.9环排名第一，希腊选手克拉卡奇以138.1环排名第二，俄罗斯选手巴特萨拉斯基纳以137.9环排名第三。埃及选手埃尔霍霍德第四位被淘汰，获得第五名。</p>
<p>第五轮，中国选手张梦雪以159.1环排名第一，希腊选手克拉卡奇和俄罗斯选手巴特萨拉斯基纳以158.3和157.3环排名二、三位，墨西哥选手扎瓦拉被淘汰，取得第四名。</p>
<p>第六轮，希腊选手克拉卡奇以177.7环的成绩被淘汰，因此获得一枚铜牌。最后两发子弹在中国选手张梦雪和俄罗斯选手巴特萨拉斯基纳之间展开。</p>
<p>最终，中国选手张梦雪以199.4环获得金牌，俄罗斯选手巴特萨拉斯基纳以197.1环夺得银牌，希腊选手克拉卡奇以177.7环摘得铜牌。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;中国队终于取得了里约奥运的首金&lt;br&gt;
    
    </summary>
    
      <category term="体育" scheme="http://code.idea4j.com/categories/%E4%BD%93%E8%82%B2/"/>
    
    
      <category term="里约" scheme="http://code.idea4j.com/tags/%E9%87%8C%E7%BA%A6/"/>
    
  </entry>
  
  <entry>
    <title>喜欢的NBA海报</title>
    <link href="http://code.idea4j.com/2016/08/03/nba1/"/>
    <id>http://code.idea4j.com/2016/08/03/nba1/</id>
    <published>2016-08-03T13:01:24.000Z</published>
    <updated>2016-09-22T05:42:39.206Z</updated>
    
    <content type="html"><![CDATA[<p>腾讯直播中的海报~<br><a id="more"></a></p>
<h1 id="NBA直播海报"><a href="#NBA直播海报" class="headerlink" title="NBA直播海报"></a>NBA直播海报</h1><p><img src="http://obc3a6u0s.bkt.clouddn.com/10.pic.jpg" alt="让我照耀这个时代"><br><img src="http://obc3a6u0s.bkt.clouddn.com/9.pic.jpg" alt="影响联盟格局的男人"><br><img src="http://obc3a6u0s.bkt.clouddn.com/6.pic.jpg" alt="73-9"><br><img src="http://obc3a6u0s.bkt.clouddn.com/8.pic.jpg" alt="3分之神"><br><img src="http://obc3a6u0s.bkt.clouddn.com/4.pic.jpg" alt="30-23"><br><img src="http://obc3a6u0s.bkt.clouddn.com/3.pic.jpg" alt="30-24"><br><img src="http://obc3a6u0s.bkt.clouddn.com/7.pic.jpg" alt="如果当年我们没有各奔东西"><br><img src="http://obc3a6u0s.bkt.clouddn.com/5.pic.jpg" alt="硬汉"></p>
<h3 id="好吧-我承认我喜欢库里"><a href="#好吧-我承认我喜欢库里" class="headerlink" title="好吧,我承认我喜欢库里"></a>好吧,我承认我喜欢库里</h3><p>库里集锦：</p>
<iframe height="498" width="510" src="http://player.youku.com/embed/XMTU5NjU4ODA4NA==" frameborder="0" allowfullscreen></iframe>

<p><a href="http://v.qq.com/cover/7/7kxz9octhcmo01t.html?vid=h0020hfumc3" target="_blank" rel="external">库里单赛季402记三分全记录(1)</a><br><a href="http://v.qq.com/cover/6/6fp1b9m6nttqy0p.html?vid=i0020rjlj6t" target="_blank" rel="external">库里单赛季402记三分全记录(2)</a><br><a href="http://v.qq.com/cover/1/16857d5zainor08.html?vid=o0020yrgd8p" target="_blank" rel="external">库里单赛季402记三分全记录(3)</a><br><a href="http://v.qq.com/cover/r/roghcf5e4j44o31.html?vid=v0020t6dy77" target="_blank" rel="external">库里单赛季402记三分全记录(4)</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;腾讯直播中的海报~&lt;br&gt;
    
    </summary>
    
      <category term="NBA" scheme="http://code.idea4j.com/categories/NBA/"/>
    
    
      <category term="NBA" scheme="http://code.idea4j.com/tags/NBA/"/>
    
  </entry>
  
  <entry>
    <title>10家慕课网站</title>
    <link href="http://code.idea4j.com/2016/08/02/mooc10/"/>
    <id>http://code.idea4j.com/2016/08/02/mooc10/</id>
    <published>2016-08-02T10:14:39.000Z</published>
    <updated>2016-09-22T05:42:39.261Z</updated>
    
    <content type="html"><![CDATA[<p>收集的10个网站,蹭课<br><a id="more"></a></p>
<h2 id="地址"><a href="#地址" class="headerlink" title="地址"></a>地址</h2><p>   <a href="http://www.mooc.cn" target="_blank" rel="external">MOOC中国 http://www.mooc.cn/</a><br>   <a href="http://www.imooc.com" target="_blank" rel="external">慕课网 http://www.imooc.com</a><br>   <a href="http://www.icourses.cn" target="_blank" rel="external">爱课程 http://www.icourses.cn</a><br>   <a href="http://www.icourse163.org" target="_blank" rel="external">中国大学Mooc http://www.icourse163.org</a><br>   <a href="http://www.cnmooc.org" target="_blank" rel="external">好大学在线 http://www.cnmooc.org</a><br>   <a href="http://www.xuetangx.com" target="_blank" rel="external">学堂在线 http://www.xuetangx.com</a><br>   <a href="http://www.daydays.com" target="_blank" rel="external">天天象上 http://www.daydays.com</a><br>   <a href="http://www.miguxue.com" target="_blank" rel="external">咪咕学堂 http://www.miguxue.com</a><br>   <a href="http://www.wanmen.org" target="_blank" rel="external">万门大学 http://www.wanmen.org</a><br>   <a href="http://www.topu.com" target="_blank" rel="external">顶你学堂 http://www.topu.com</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;收集的10个网站,蹭课&lt;br&gt;
    
    </summary>
    
      <category term="其他" scheme="http://code.idea4j.com/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="网站" scheme="http://code.idea4j.com/tags/%E7%BD%91%E7%AB%99/"/>
    
  </entry>
  
  <entry>
    <title>在多台电脑上使用hexo</title>
    <link href="http://code.idea4j.com/2016/08/01/hexouser/"/>
    <id>http://code.idea4j.com/2016/08/01/hexouser/</id>
    <published>2016-08-01T04:42:35.000Z</published>
    <updated>2016-09-22T05:44:02.386Z</updated>
    
    <content type="html"><![CDATA[<p>家里和公司可以同时写了<br><a id="more"></a></p>
<h3 id="1-上传初始电脑上的Hexo源文件到github的“hexo”仓库"><a href="#1-上传初始电脑上的Hexo源文件到github的“hexo”仓库" class="headerlink" title="1.上传初始电脑上的Hexo源文件到github的“hexo”仓库"></a>1.上传初始电脑上的Hexo源文件到github的“hexo”仓库</h3><pre><code>git init
git add README.md
git commit -m &quot;first commit&quot;
git remote add origin git@github.com:beijinguang/hexo.git
git push -u origin master
</code></pre><h3 id="2-在其他电脑上安装hexo环境，gitclone-“hexo”"><a href="#2-在其他电脑上安装hexo环境，gitclone-“hexo”" class="headerlink" title="2.在其他电脑上安装hexo环境，gitclone “hexo”"></a>2.在其他电脑上安装hexo环境，gitclone “hexo”</h3><pre><code>git clone git@github.com:beijinguang/hexo.git
</code></pre><h3 id="3-所有电脑上都先检查更新再修改上传"><a href="#3-所有电脑上都先检查更新再修改上传" class="headerlink" title="3.所有电脑上都先检查更新再修改上传"></a>3.所有电脑上都先检查更新再修改上传</h3><pre><code>a.建议先检查更新git pull，将本地博客源文件更新至最新版本:git pull
b.然后可以新建或修改博客内容，进行预览等操作
c.新建博客后，先同步Hexo源文件，将修改后的源文件同步至github:
 git add . ,git commit -m &quot;record&quot;, git push orign master
d.然后再执行Hexo的生成文件和部署指令:hexo generate ,hexo deploy
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;家里和公司可以同时写了&lt;br&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://code.idea4j.com/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://code.idea4j.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>hexo</title>
    <link href="http://code.idea4j.com/2016/07/30/hi-hexo/"/>
    <id>http://code.idea4j.com/2016/07/30/hi-hexo/</id>
    <published>2016-07-30T09:58:27.000Z</published>
    <updated>2016-09-21T08:13:12.997Z</updated>
    
    <content type="html"><![CDATA[<p>hexo生成的第一篇文章<br><a id="more"></a></p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;hexo生成的第一篇文章&lt;br&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://code.idea4j.com/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://code.idea4j.com/tags/Hexo/"/>
    
  </entry>
  
</feed>
